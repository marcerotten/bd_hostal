--------------------------------------------------------
-- Archivo creado  - miércoles-mayo-27-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence ACCESORIO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."ACCESORIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CATEGORIA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."CATEGORIA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CLIENTE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."CLIENTE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_CLIENTE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_CLIENTE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_FACTURA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_FACTURA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_MENU_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_OC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_OC_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_PEDIDO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_PEDIDO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."DETALLE_PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPLEADO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."EMPLEADO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMPRESA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."EMPRESA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ESTADO_HAB_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."ESTADO_HAB_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ESTADO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."ESTADO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FACTURA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."FACTURA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HAB_ACCESORIO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."HAB_ACCESORIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HABITACION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."HABITACION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HOTEL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."HOTEL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence HOTEL_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."HOTEL_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LOGIN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."LOGIN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 381 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."MENU_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORDEN_COMPRA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."ORDEN_COMPRA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORDEN_PEDIDO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."ORDEN_PEDIDO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERFIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."PERFIL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERIODO_MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."PERIODO_MENU_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PROVEEDOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."PROVEEDOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RECEPCION_PEDIDO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."RECEPCION_PEDIDO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RUBRO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."RUBRO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TIPO_CAMA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."TIPO_CAMA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TIPO_MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "HOSTAL"."TIPO_MENU_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ACCESORIO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."ACCESORIO" 
   (	"ID_ACCESORIO" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORIA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."CATEGORIA" 
   (	"ID_CATEGORIA" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."CLIENTE" 
   (	"ID_CLIENTE" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"APELLIDO" VARCHAR2(30 BYTE), 
	"RUT" VARCHAR2(9 BYTE), 
	"TELEFONO" NUMBER(10,0), 
	"ID_EMPRESA" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_CLIENTE
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_CLIENTE" 
   (	"ID_DETALLE_CLIENTE" NUMBER(10,0), 
	"ID_CLIENTE" NUMBER(10,0), 
	"FECHA_INGRESO" DATE, 
	"FECHA_SALIDA" DATE, 
	"ID_HABITACION" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_FACTURA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_FACTURA" 
   (	"ID_DETALLE_FACTURA" NUMBER(10,0), 
	"ID_DETALLE_CLIENTE" NUMBER(10,0), 
	"ID_FACTURA" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_MENU
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_MENU" 
   (	"ID_DETALLE_MENU" NUMBER(10,0), 
	"ID_DETALLE_CLIENTE" NUMBER(10,0), 
	"ID_MENU" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_OC
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_OC" 
   (	"ID_DETALLE_OC" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(30 BYTE), 
	"ID_OC" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_PEDIDO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_PEDIDO" 
   (	"ID_DETALLE_PEDIDO" NUMBER(10,0), 
	"ID_ORDEN_PEDIDO" NUMBER(10,0), 
	"ID_PRODUCTO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETALLE_PRODUCTO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."DETALLE_PRODUCTO" 
   (	"ID_DETALLE_PRODUCTO" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLEADO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."EMPLEADO" 
   (	"ID_EMPLEADO" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"APELLIDO" VARCHAR2(30 BYTE), 
	"RUT" VARCHAR2(9 BYTE), 
	"TELEFONO" NUMBER(10,0), 
	"MAIL" VARCHAR2(30 BYTE), 
	"ID_HOTEL" NUMBER(10,0), 
	"ID_USUARIO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPRESA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."EMPRESA" 
   (	"ID_EMPRESA" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"RUT" VARCHAR2(9 BYTE), 
	"DIRECCION" VARCHAR2(30 BYTE), 
	"TELEFONO" NUMBER(10,0), 
	"ID_USUARIO" NUMBER(10,0), 
	"ID_HOTEL" NUMBER(10,0), 
	"MAIL" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ESTADO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."ESTADO" 
   (	"ID_ESTADO" NUMBER(10,0), 
	"CODIGO" VARCHAR2(5 BYTE), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ESTADO_HAB
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."ESTADO_HAB" 
   (	"ID_ESTADO_HAB" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table FACTURA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."FACTURA" 
   (	"ID_FACTURA" NUMBER(10,0), 
	"ID_EMPRESA" NUMBER(10,0), 
	"FECHA_EMISION" DATE, 
	"FECHA_VENC" DATE, 
	"NETO" NUMBER(7,0), 
	"IVA" NUMBER(7,0), 
	"TOTAL" NUMBER(7,0), 
	"ID_ESTADO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HAB_ACCESORIO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."HAB_ACCESORIO" 
   (	"ID_HAB_ACCESORIO" NUMBER(10,0), 
	"ID_HABITACION" NUMBER(10,0), 
	"ID_ACCESORIO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HABITACION
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."HABITACION" 
   (	"ID_HABITACION" NUMBER(10,0), 
	"ID_TIPO_CAMA" NUMBER(10,0), 
	"PRECIO" NUMBER(10,0), 
	"ID_ESTADO_HAB" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HOTEL
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."HOTEL" 
   (	"ID_HOTEL" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"RUT" VARCHAR2(9 BYTE), 
	"DIRECCION" VARCHAR2(30 BYTE), 
	"TELEFONO" NUMBER(10,0), 
	"MAIL" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LOGIN
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."LOGIN" 
   (	"ID_USUARIO" NUMBER(10,0), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"PASSWORD" VARCHAR2(20 BYTE), 
	"ID_PERFIL" NUMBER(10,0), 
	"ACTIVO" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MENU
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."MENU" 
   (	"ID_MENU" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(30 BYTE), 
	"ID_TIPO_MENU" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDEN_COMPRA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."ORDEN_COMPRA" 
   (	"ID_OC" NUMBER(10,0), 
	"FECHA_EMI" DATE, 
	"FECHA_VENC" DATE, 
	"NETO" NUMBER(7,0), 
	"IVA" NUMBER(7,0), 
	"TOTAL" NUMBER(7,0), 
	"ID_EMPRESA" NUMBER(10,0), 
	"ID_ESTADO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDEN_PEDIDO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."ORDEN_PEDIDO" 
   (	"ID_ORDEN_PEDIDO" NUMBER(10,0), 
	"FECHA_PEDIDO" DATE, 
	"TOTAL" NUMBER(7,0), 
	"ID_PROVEEDOR" NUMBER(10,0), 
	"ID_EMPLEADO" NUMBER(10,0), 
	"ID_ESTADO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PERFIL
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."PERFIL" 
   (	"ID_PERFIL" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PERIODO_MENU
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."PERIODO_MENU" 
   (	"ID_PERIODO_MENU" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(200 BYTE), 
	"ID_MENU" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCTO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."PRODUCTO" 
   (	"ID_PRODUCTO" NUMBER(10,0), 
	"ID_CATEGORIA" NUMBER(10,0), 
	"ID_DETALLE_PRODUCTO" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE), 
	"PRECIO" NUMBER(7,0), 
	"STOCK" NUMBER(7,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PROVEEDOR
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."PROVEEDOR" 
   (	"ID_PROVEEDOR" NUMBER(10,0), 
	"NOMBRE" VARCHAR2(20 BYTE), 
	"APELLIDO" VARCHAR2(20 BYTE), 
	"RUT" VARCHAR2(9 BYTE), 
	"TELEFONO" NUMBER(10,0), 
	"ID_RUBRO" NUMBER(10,0), 
	"ID_USUARIO" NUMBER(10,0), 
	"MAIL" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RECEPCION_PEDIDO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."RECEPCION_PEDIDO" 
   (	"ID_RECEPCION_PEDIDO" NUMBER(10,0), 
	"COD_PRODUCTO" NUMBER(10,0), 
	"ID_ORDEN_PEDIDO" NUMBER(10,0), 
	"FECHA_RECEPCION" DATE, 
	"ID_EMPLEADO" NUMBER(10,0), 
	"FECHA_VENC" NUMBER(8,0) DEFAULT 00000000
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RUBRO
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."RUBRO" 
   (	"ID_RUBRO" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TIPO_CAMA
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."TIPO_CAMA" 
   (	"TIPO_CAMA" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TIPO_MENU
--------------------------------------------------------

  CREATE TABLE "HOSTAL"."TIPO_MENU" 
   (	"ID_TIPO_MENU" NUMBER(10,0), 
	"DESCRIPCION" VARCHAR2(20 BYTE), 
	"PRECIO" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into HOSTAL.ACCESORIO
SET DEFINE OFF;
REM INSERTING into HOSTAL.CATEGORIA
SET DEFINE OFF;
Insert into HOSTAL.CATEGORIA (ID_CATEGORIA,DESCRIPCION) values ('1','prueba');
REM INSERTING into HOSTAL.CLIENTE
SET DEFINE OFF;
Insert into HOSTAL.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,RUT,TELEFONO,ID_EMPRESA) values ('4','Max','padi','254064084','96853354','17');
Insert into HOSTAL.CLIENTE (ID_CLIENTE,NOMBRE,APELLIDO,RUT,TELEFONO,ID_EMPRESA) values ('5','JOE','PADI','25656554','96864855','17');
REM INSERTING into HOSTAL.DETALLE_CLIENTE
SET DEFINE OFF;
Insert into HOSTAL.DETALLE_CLIENTE (ID_DETALLE_CLIENTE,ID_CLIENTE,FECHA_INGRESO,FECHA_SALIDA,ID_HABITACION) values ('15','5',to_date('25/05/20','DD/MM/RR'),to_date('27/05/20','DD/MM/RR'),'2');
Insert into HOSTAL.DETALLE_CLIENTE (ID_DETALLE_CLIENTE,ID_CLIENTE,FECHA_INGRESO,FECHA_SALIDA,ID_HABITACION) values ('16','5',to_date('25/05/20','DD/MM/RR'),to_date('27/05/20','DD/MM/RR'),'2');
REM INSERTING into HOSTAL.DETALLE_FACTURA
SET DEFINE OFF;
REM INSERTING into HOSTAL.DETALLE_MENU
SET DEFINE OFF;
REM INSERTING into HOSTAL.DETALLE_OC
SET DEFINE OFF;
REM INSERTING into HOSTAL.DETALLE_PEDIDO
SET DEFINE OFF;
REM INSERTING into HOSTAL.DETALLE_PRODUCTO
SET DEFINE OFF;
Insert into HOSTAL.DETALLE_PRODUCTO (ID_DETALLE_PRODUCTO,DESCRIPCION) values ('1','Polera');
REM INSERTING into HOSTAL.EMPLEADO
SET DEFINE OFF;
Insert into HOSTAL.EMPLEADO (ID_EMPLEADO,NOMBRE,APELLIDO,RUT,TELEFONO,MAIL,ID_HOTEL,ID_USUARIO) values ('1','ALEJANDRO','PADILLA','264084064','965699558','TEST2@','1','61');
REM INSERTING into HOSTAL.EMPRESA
SET DEFINE OFF;
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('17','UPDATE2','UPDATE','MODIFY','123456789','8','1','MODIFY');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('21','test2','223334445','dir test','1234577','21','1','test2@test.com');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('69','Alejandro18','171717','Cauquenes17','171717171','327','1','17@17.com');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('45','Alejandro Contreras','167982905','Cauquenes 60, depto 1304','945458609','74','1','ale.innorm@gmail.com');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('70','qwe','sisisi','qwe','123456789','328','1','qwe');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('47','qwewqe','qwewqe','qweqwe','12345678','82','1','qweqwe');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('48','qqq','qqq','qqq','987654321','83','1','qqq');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('49','zxc','zxc','zxc','12','84','1','<zxasd');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('50','123','123','123','123123123','111','1','123');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('71','tyu','tyu','tyu','123456789','329','1','tyu');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('52','test23123','43534','sdad','13123','127','1','asds@asd.com');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('72','bnm','bnm','bnm','123456789','330','1','bnm');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('54','uio','uio','uio','123123123','195','1','uio');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('55','uio','uiouio','uio','123456789','205','1','uio');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('56','999','999','999','999999999','211','1','999');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('73','bnm','jkl','bnm','123456789','331','1','bnm');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('77','222','222','222','222222222','343','1','222');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('78','333','333','333','333333333','344','1','333');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('60','fasf','234234','asdsad','423423','225','1','asdasd');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('79','777','777','777','777777777','345','1','777');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('80','555','555','555','555555555','346','1','555');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('82','22','22','22','222222222','348','1','22');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('83','33','33','33','333333333','349','1','33');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('84','44','44','44','444444444','350','1','44');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('85','55','55','55','555555555','351','1','55');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('67','ASDASD','ASD','ASD','123456789','305','1','ASD');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('68','qwe','qwe','qwe','123456789','322','1','qweqwe');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('86','88','88','88','888888888','352','1','88');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('87','1414','1515','1414','141414141','353','1','1414');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('88','123','123123123','123','123123121','354','1','123');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('89','lll2','lll2','lll2','123456789','355','1','ll2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('90','nnn2','nnn2','nnn2','123456789','356','1','nnn2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('91','ggg2','ggg2','ggg2','123456789','357','1','ggg2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('92','uuu2','uuu2','uuu2','123456789','358','1','uuu2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('93','vvv2','vvv2','vvv2','123456789','359','1','vvv2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('94','ppp2','ppp2','ppp2','123456789','360','1','ppp2');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('95','qweqwe','qweqwe','qweqwe','123213123','361','1','asdsad');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('96','asd','asd','asd','123412312','362','1','dfg');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('97','ñññ','ñññ','ñññ','112311231','363','1','asd@gmail.com');
Insert into HOSTAL.EMPRESA (ID_EMPRESA,NOMBRE,RUT,DIRECCION,TELEFONO,ID_USUARIO,ID_HOTEL,MAIL) values ('98','ttt','ttt','ttt','126454657','364','1','ttt@dat.com');
REM INSERTING into HOSTAL.ESTADO
SET DEFINE OFF;
Insert into HOSTAL.ESTADO (ID_ESTADO,CODIGO,DESCRIPCION) values ('1','E','ACTIVA');
Insert into HOSTAL.ESTADO (ID_ESTADO,CODIGO,DESCRIPCION) values ('2','E','INACTIVA');
REM INSERTING into HOSTAL.ESTADO_HAB
SET DEFINE OFF;
Insert into HOSTAL.ESTADO_HAB (ID_ESTADO_HAB,DESCRIPCION) values ('1','Disponible');
Insert into HOSTAL.ESTADO_HAB (ID_ESTADO_HAB,DESCRIPCION) values ('2','Desactivada');
REM INSERTING into HOSTAL.FACTURA
SET DEFINE OFF;
REM INSERTING into HOSTAL.HAB_ACCESORIO
SET DEFINE OFF;
REM INSERTING into HOSTAL.HABITACION
SET DEFINE OFF;
Insert into HOSTAL.HABITACION (ID_HABITACION,ID_TIPO_CAMA,PRECIO,ID_ESTADO_HAB) values ('2','1','30000','1');
REM INSERTING into HOSTAL.HOTEL
SET DEFINE OFF;
Insert into HOSTAL.HOTEL (ID_HOTEL,NOMBRE,RUT,DIRECCION,TELEFONO,MAIL) values ('1','hostal clarita','776665554','clarita 123','1234567','clarita123@test.com');
REM INSERTING into HOSTAL.LOGIN
SET DEFINE OFF;
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('8','update','MODIFY','1','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('21','test2','test2','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('61','joe_padi','Jp1234','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('43','jose','jose123','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('63','alejo','passwordTest','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('69','alejo18','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('71','alejo1800','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('72','alej1800','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('74','alesj1800','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('81','sesj1800','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('82','qweqwe','qweqwe','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('83','qqq','qqq','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('84','asd','asd','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('111','123','123','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('126','xixixi','xixixi','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('127','1234','1234','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('171','123123','123','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('195','uio','uio','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('205','uiouio','uio','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('211','999','999','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('213','j1800','passwordTest','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('219','ppppp','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('223','pppp2p','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('225','rrr','rrrr','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('226','p2ppp2p','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('228','19.38','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('232','19.39','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('238','21.03','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('240','21.04','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('277','21.44','pppp','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('305','ASD','ASD','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('322','qwer','qwe','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('327','171717','171717','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('328','sisi','qwe','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('329','tyu','tyu','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('330','bnm','bnm','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('331','jkl','bnm','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('340','456','456','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('341','789','456','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('342','111','111','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('343','222','222','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('344','333','333','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('345','777','777','1','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('346','555','555','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('347','11','11','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('348','22','22','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('349','33','33','2','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('350','44','44','21','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('351','55','55','22','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('352','88','88','22','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('353','1515','1414','22','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('354','123123123123','123','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('355','lll2','lll2','21','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('356','nnn2','nnn2','21','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('357','ggg2','ggg2','2','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('358','uuu2','uuu2','1','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('359','vvv2','vvv','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('360','ppp2','ppp2','22','N');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('361','asdasd','asdasd','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('362','dfg','asd','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('363','ñññ','ñññ','1','Y');
Insert into HOSTAL.LOGIN (ID_USUARIO,USERNAME,PASSWORD,ID_PERFIL,ACTIVO) values ('364','ttt','ttt','1','Y');
REM INSERTING into HOSTAL.MENU
SET DEFINE OFF;
Insert into HOSTAL.MENU (ID_MENU,DESCRIPCION,ID_TIPO_MENU) values ('3','arroz con pollo asado','2');
REM INSERTING into HOSTAL.ORDEN_COMPRA
SET DEFINE OFF;
REM INSERTING into HOSTAL.ORDEN_PEDIDO
SET DEFINE OFF;
REM INSERTING into HOSTAL.PERFIL
SET DEFINE OFF;
Insert into HOSTAL.PERFIL (ID_PERFIL,NOMBRE) values ('1','admin');
Insert into HOSTAL.PERFIL (ID_PERFIL,NOMBRE) values ('2','empresa');
Insert into HOSTAL.PERFIL (ID_PERFIL,NOMBRE) values ('21','empleado');
Insert into HOSTAL.PERFIL (ID_PERFIL,NOMBRE) values ('22','proveedor');
REM INSERTING into HOSTAL.PERIODO_MENU
SET DEFINE OFF;
Insert into HOSTAL.PERIODO_MENU (ID_PERIODO_MENU,DESCRIPCION,ID_MENU) values ('3','lunes','3');
REM INSERTING into HOSTAL.PRODUCTO
SET DEFINE OFF;
Insert into HOSTAL.PRODUCTO (ID_PRODUCTO,ID_CATEGORIA,ID_DETALLE_PRODUCTO,DESCRIPCION,PRECIO,STOCK) values ('3','1','1','JABON','1000','0');
Insert into HOSTAL.PRODUCTO (ID_PRODUCTO,ID_CATEGORIA,ID_DETALLE_PRODUCTO,DESCRIPCION,PRECIO,STOCK) values ('4','1','1','TOALLAS','19990','100');
REM INSERTING into HOSTAL.PROVEEDOR
SET DEFINE OFF;
Insert into HOSTAL.PROVEEDOR (ID_PROVEEDOR,NOMBRE,APELLIDO,RUT,TELEFONO,ID_RUBRO,ID_USUARIO,MAIL) values ('2','jose','perez','98876541','444444','1','43','jose@test.com');
REM INSERTING into HOSTAL.RECEPCION_PEDIDO
SET DEFINE OFF;
REM INSERTING into HOSTAL.RUBRO
SET DEFINE OFF;
Insert into HOSTAL.RUBRO (ID_RUBRO,DESCRIPCION) values ('1','ELECTRONICA');
REM INSERTING into HOSTAL.TIPO_CAMA
SET DEFINE OFF;
Insert into HOSTAL.TIPO_CAMA (TIPO_CAMA,DESCRIPCION) values ('1','2 PLAZA');
REM INSERTING into HOSTAL.TIPO_MENU
SET DEFINE OFF;
Insert into HOSTAL.TIPO_MENU (ID_TIPO_MENU,DESCRIPCION,PRECIO) values ('2','ejecutivo','4500');
--------------------------------------------------------
--  DDL for Index RECEPCION_PEDIDO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."RECEPCION_PEDIDO_PK" ON "HOSTAL"."RECEPCION_PEDIDO" ("ID_RECEPCION_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TIPO_CAMA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."TIPO_CAMA_PK" ON "HOSTAL"."TIPO_CAMA" ("TIPO_CAMA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index LOGIN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."LOGIN_PK" ON "HOSTAL"."LOGIN" ("ID_USUARIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PERIODO_MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."PERIODO_MENU_PK" ON "HOSTAL"."PERIODO_MENU" ("ID_PERIODO_MENU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ESTADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."ESTADO_PK" ON "HOSTAL"."ESTADO" ("ID_ESTADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index RUBRO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."RUBRO_PK" ON "HOSTAL"."RUBRO" ("ID_RUBRO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CLIENTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."CLIENTE_PK" ON "HOSTAL"."CLIENTE" ("ID_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_FACTURA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_FACTURA_PK" ON "HOSTAL"."DETALLE_FACTURA" ("ID_DETALLE_FACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_CLIENTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_CLIENTE_PK" ON "HOSTAL"."DETALLE_CLIENTE" ("ID_DETALLE_CLIENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index UQ_RUT
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."UQ_RUT" ON "HOSTAL"."EMPRESA" ("RUT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ACCESORIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."ACCESORIO_PK" ON "HOSTAL"."ACCESORIO" ("ID_ACCESORIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ORDEN_COMPRA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."ORDEN_COMPRA_PK" ON "HOSTAL"."ORDEN_COMPRA" ("ID_OC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HABITACION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."HABITACION_PK" ON "HOSTAL"."HABITACION" ("ID_HABITACION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ESTADO_HAB_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."ESTADO_HAB_PK" ON "HOSTAL"."ESTADO_HAB" ("ID_ESTADO_HAB") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index UQ_DESCRIPCION
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."UQ_DESCRIPCION" ON "HOSTAL"."PERIODO_MENU" ("DESCRIPCION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_PRODUCTO_PK" ON "HOSTAL"."DETALLE_PRODUCTO" ("ID_DETALLE_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."MENU_PK" ON "HOSTAL"."MENU" ("ID_MENU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HAB_ACCESORIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."HAB_ACCESORIO_PK" ON "HOSTAL"."HAB_ACCESORIO" ("ID_HAB_ACCESORIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPRESA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."EMPRESA_PK" ON "HOSTAL"."EMPRESA" ("ID_EMPRESA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_PEDIDO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_PEDIDO_PK" ON "HOSTAL"."DETALLE_PEDIDO" ("ID_DETALLE_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index FACTURA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."FACTURA_PK" ON "HOSTAL"."FACTURA" ("ID_FACTURA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_OC_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_OC_PK" ON "HOSTAL"."DETALLE_OC" ("ID_DETALLE_OC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CATEGORIA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."CATEGORIA_PK" ON "HOSTAL"."CATEGORIA" ("ID_CATEGORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index UNIQUE_CONSTRAINT_USERNAME
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."UNIQUE_CONSTRAINT_USERNAME" ON "HOSTAL"."LOGIN" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HOTEL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."HOTEL_PK" ON "HOSTAL"."HOTEL" ("ID_HOTEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ORDEN_PEDIDO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."ORDEN_PEDIDO_PK" ON "HOSTAL"."ORDEN_PEDIDO" ("ID_ORDEN_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PROVEEDOR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."PROVEEDOR_PK" ON "HOSTAL"."PROVEEDOR" ("ID_PROVEEDOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TIPO_MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."TIPO_MENU_PK" ON "HOSTAL"."TIPO_MENU" ("ID_TIPO_MENU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PERFIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."PERFIL_PK" ON "HOSTAL"."PERFIL" ("ID_PERFIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETALLE_MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."DETALLE_MENU_PK" ON "HOSTAL"."DETALLE_MENU" ("ID_DETALLE_MENU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLEADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."EMPLEADO_PK" ON "HOSTAL"."EMPLEADO" ("ID_EMPLEADO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "HOSTAL"."PRODUCTO_PK" ON "HOSTAL"."PRODUCTO" ("ID_PRODUCTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table TIPO_CAMA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."TIPO_CAMA" MODIFY ("TIPO_CAMA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."TIPO_CAMA" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."TIPO_CAMA" ADD CONSTRAINT "TIPO_CAMA_PK" PRIMARY KEY ("TIPO_CAMA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CATEGORIA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."CATEGORIA" MODIFY ("ID_CATEGORIA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CATEGORIA" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CATEGORIA" ADD CONSTRAINT "CATEGORIA_PK" PRIMARY KEY ("ID_CATEGORIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HABITACION
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."HABITACION" MODIFY ("ID_HABITACION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HABITACION" MODIFY ("ID_TIPO_CAMA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HABITACION" MODIFY ("PRECIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HABITACION" MODIFY ("ID_ESTADO_HAB" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HABITACION" ADD CONSTRAINT "HABITACION_PK" PRIMARY KEY ("ID_HABITACION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLE_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" MODIFY ("ID_DETALLE_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" MODIFY ("ID_ORDEN_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" MODIFY ("ID_PRODUCTO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" ADD CONSTRAINT "DETALLE_PEDIDO_PK" PRIMARY KEY ("ID_DETALLE_PEDIDO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("ID_FACTURA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("ID_EMPRESA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("FECHA_EMISION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("FECHA_VENC" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("NETO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("IVA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."FACTURA" ADD CONSTRAINT "FACTURA_PK" PRIMARY KEY ("ID_FACTURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDEN_COMPRA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("ID_OC" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("FECHA_EMI" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("FECHA_VENC" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("NETO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("IVA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("ID_EMPRESA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" MODIFY ("ID_ESTADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" ADD CONSTRAINT "ORDEN_COMPRA_PK" PRIMARY KEY ("ID_OC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESTADO_HAB
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ESTADO_HAB" MODIFY ("ID_ESTADO_HAB" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ESTADO_HAB" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ESTADO_HAB" ADD CONSTRAINT "ESTADO_HAB_PK" PRIMARY KEY ("ID_ESTADO_HAB")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOGIN
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."LOGIN" MODIFY ("ACTIVO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."LOGIN" ADD CONSTRAINT "UNIQUE_CONSTRAINT_USERNAME" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HOSTAL"."LOGIN" MODIFY ("ID_USUARIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."LOGIN" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."LOGIN" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."LOGIN" MODIFY ("ID_PERFIL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."LOGIN" ADD CONSTRAINT "LOGIN_PK" PRIMARY KEY ("ID_USUARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESTADO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ESTADO" MODIFY ("ID_ESTADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ESTADO" MODIFY ("CODIGO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ESTADO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ESTADO" ADD CONSTRAINT "ESTADO_PK" PRIMARY KEY ("ID_ESTADO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLE_OC
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_OC" MODIFY ("ID_DETALLE_OC" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_OC" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_OC" MODIFY ("ID_OC" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_OC" ADD CONSTRAINT "DETALLE_OC_PK" PRIMARY KEY ("ID_DETALLE_OC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCTO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("ID_PRODUCTO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("ID_CATEGORIA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("ID_DETALLE_PRODUCTO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("PRECIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" MODIFY ("STOCK" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PRODUCTO" ADD CONSTRAINT "PRODUCTO_PK" PRIMARY KEY ("ID_PRODUCTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLE_FACTURA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" MODIFY ("ID_DETALLE_FACTURA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" MODIFY ("ID_DETALLE_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" MODIFY ("ID_FACTURA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" ADD CONSTRAINT "DETALLE_FACTURA_PK" PRIMARY KEY ("ID_DETALLE_FACTURA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RUBRO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."RUBRO" MODIFY ("ID_RUBRO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RUBRO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RUBRO" ADD CONSTRAINT "RUBRO_PK" PRIMARY KEY ("ID_RUBRO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERIODO_MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PERIODO_MENU" ADD CONSTRAINT "UQ_DESCRIPCION" UNIQUE ("DESCRIPCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HOSTAL"."PERIODO_MENU" MODIFY ("ID_PERIODO_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PERIODO_MENU" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PERIODO_MENU" MODIFY ("ID_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PERIODO_MENU" ADD CONSTRAINT "PERIODO_MENU_PK" PRIMARY KEY ("ID_PERIODO_MENU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."MENU" MODIFY ("ID_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."MENU" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."MENU" ADD CONSTRAINT "MENU_PK" PRIMARY KEY ("ID_MENU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HAB_ACCESORIO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" MODIFY ("ID_HAB_ACCESORIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" MODIFY ("ID_HABITACION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" MODIFY ("ID_ACCESORIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" ADD CONSTRAINT "HAB_ACCESORIO_PK" PRIMARY KEY ("ID_HAB_ACCESORIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLE_MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_MENU" MODIFY ("ID_DETALLE_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_MENU" MODIFY ("ID_DETALLE_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_MENU" MODIFY ("ID_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_MENU" ADD CONSTRAINT "DETALLE_MENU_PK" PRIMARY KEY ("ID_DETALLE_MENU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PERFIL
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PERFIL" MODIFY ("ID_PERFIL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PERFIL" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PERFIL" ADD CONSTRAINT "PERFIL_PK" PRIMARY KEY ("ID_PERFIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPRESA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."EMPRESA" ADD CONSTRAINT "UQ_RUT" UNIQUE ("RUT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("MAIL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("RUT" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("DIRECCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" ADD CONSTRAINT "EMPRESA_PK" PRIMARY KEY ("ID_EMPRESA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("ID_USUARIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPRESA" MODIFY ("ID_HOTEL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DETALLE_PRODUCTO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_PRODUCTO" MODIFY ("ID_DETALLE_PRODUCTO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_PRODUCTO" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_PRODUCTO" ADD CONSTRAINT "DETALLE_PRODUCTO_PK" PRIMARY KEY ("ID_DETALLE_PRODUCTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("ID_EMPLEADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" ADD CONSTRAINT "EMPLEADO_PK" PRIMARY KEY ("ID_EMPLEADO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("APELLIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("RUT" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("MAIL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("ID_HOTEL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("ID_USUARIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."EMPLEADO" MODIFY ("NOMBRE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RECEPCION_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" MODIFY ("ID_RECEPCION_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" MODIFY ("COD_PRODUCTO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" MODIFY ("ID_ORDEN_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" MODIFY ("FECHA_RECEPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" MODIFY ("ID_EMPLEADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" ADD CONSTRAINT "RECEPCION_PEDIDO_PK" PRIMARY KEY ("ID_RECEPCION_PEDIDO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("ID_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("APELLIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("RUT" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" MODIFY ("ID_EMPRESA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."CLIENTE" ADD CONSTRAINT "CLIENTE_PK" PRIMARY KEY ("ID_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TIPO_MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."TIPO_MENU" MODIFY ("ID_TIPO_MENU" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."TIPO_MENU" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."TIPO_MENU" ADD CONSTRAINT "TIPO_MENU_PK" PRIMARY KEY ("ID_TIPO_MENU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDEN_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("ID_ORDEN_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("FECHA_PEDIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("TOTAL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("ID_PROVEEDOR" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("ID_EMPLEADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" MODIFY ("ID_ESTADO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" ADD CONSTRAINT "ORDEN_PEDIDO_PK" PRIMARY KEY ("ID_ORDEN_PEDIDO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HOTEL
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."HOTEL" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HOTEL" MODIFY ("RUT" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HOTEL" MODIFY ("DIRECCION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HOTEL" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."HOTEL" ADD CONSTRAINT "HOTEL_PK" PRIMARY KEY ("ID_HOTEL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ACCESORIO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ACCESORIO" MODIFY ("ID_ACCESORIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ACCESORIO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."ACCESORIO" ADD CONSTRAINT "ACCESORIO_PK" PRIMARY KEY ("ID_ACCESORIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROVEEDOR
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("MAIL" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("ID_PROVEEDOR" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("APELLIDO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("RUT" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("TELEFONO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("ID_RUBRO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" MODIFY ("ID_USUARIO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."PROVEEDOR" ADD CONSTRAINT "PROVEEDOR_PK" PRIMARY KEY ("ID_PROVEEDOR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLE_CLIENTE
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" MODIFY ("ID_DETALLE_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" MODIFY ("ID_CLIENTE" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" MODIFY ("FECHA_INGRESO" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" MODIFY ("FECHA_SALIDA" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" MODIFY ("ID_HABITACION" NOT NULL ENABLE);
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" ADD CONSTRAINT "DETALLE_CLIENTE_PK" PRIMARY KEY ("ID_DETALLE_CLIENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLIENTE
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."CLIENTE" ADD CONSTRAINT "ID_EMPRESA_FK1" FOREIGN KEY ("ID_EMPRESA")
	  REFERENCES "HOSTAL"."EMPRESA" ("ID_EMPRESA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLE_CLIENTE
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" ADD CONSTRAINT "ID_CLIENTE_FK1" FOREIGN KEY ("ID_CLIENTE")
	  REFERENCES "HOSTAL"."CLIENTE" ("ID_CLIENTE") ENABLE;
  ALTER TABLE "HOSTAL"."DETALLE_CLIENTE" ADD CONSTRAINT "ID_HABITACION_FK1" FOREIGN KEY ("ID_HABITACION")
	  REFERENCES "HOSTAL"."HABITACION" ("ID_HABITACION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLE_FACTURA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" ADD CONSTRAINT "ID_DETALLE_CLIENTE_FK2" FOREIGN KEY ("ID_DETALLE_CLIENTE")
	  REFERENCES "HOSTAL"."DETALLE_CLIENTE" ("ID_DETALLE_CLIENTE") ENABLE;
  ALTER TABLE "HOSTAL"."DETALLE_FACTURA" ADD CONSTRAINT "ID_FACTURA_FK1" FOREIGN KEY ("ID_FACTURA")
	  REFERENCES "HOSTAL"."FACTURA" ("ID_FACTURA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLE_MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_MENU" ADD CONSTRAINT "ID_DETALLE_CLIENTE_FK1" FOREIGN KEY ("ID_DETALLE_CLIENTE")
	  REFERENCES "HOSTAL"."DETALLE_CLIENTE" ("ID_DETALLE_CLIENTE") ENABLE;
  ALTER TABLE "HOSTAL"."DETALLE_MENU" ADD CONSTRAINT "ID_MENU_FK1" FOREIGN KEY ("ID_MENU")
	  REFERENCES "HOSTAL"."MENU" ("ID_MENU") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLE_OC
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_OC" ADD CONSTRAINT "ID_OC_FK1" FOREIGN KEY ("ID_OC")
	  REFERENCES "HOSTAL"."ORDEN_COMPRA" ("ID_OC") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLE_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" ADD CONSTRAINT "ID_ORDEN_PEDIDO_FK2" FOREIGN KEY ("ID_ORDEN_PEDIDO")
	  REFERENCES "HOSTAL"."ORDEN_PEDIDO" ("ID_ORDEN_PEDIDO") ENABLE;
  ALTER TABLE "HOSTAL"."DETALLE_PEDIDO" ADD CONSTRAINT "ID_PRODUCTO_FK1" FOREIGN KEY ("ID_PRODUCTO")
	  REFERENCES "HOSTAL"."PRODUCTO" ("ID_PRODUCTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLEADO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."EMPLEADO" ADD CONSTRAINT "ID_HOTEL_FK2" FOREIGN KEY ("ID_HOTEL")
	  REFERENCES "HOSTAL"."HOTEL" ("ID_HOTEL") ENABLE;
  ALTER TABLE "HOSTAL"."EMPLEADO" ADD CONSTRAINT "ID_USUARIO_FK2" FOREIGN KEY ("ID_USUARIO")
	  REFERENCES "HOSTAL"."LOGIN" ("ID_USUARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPRESA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."EMPRESA" ADD CONSTRAINT "ID_HOTEL_FK1" FOREIGN KEY ("ID_HOTEL")
	  REFERENCES "HOSTAL"."HOTEL" ("ID_HOTEL") ENABLE;
  ALTER TABLE "HOSTAL"."EMPRESA" ADD CONSTRAINT "USUARIO_FK1" FOREIGN KEY ("ID_USUARIO")
	  REFERENCES "HOSTAL"."LOGIN" ("ID_USUARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACTURA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."FACTURA" ADD CONSTRAINT "ID_EMPRESA_FK2" FOREIGN KEY ("ID_EMPRESA")
	  REFERENCES "HOSTAL"."EMPRESA" ("ID_EMPRESA") ENABLE;
  ALTER TABLE "HOSTAL"."FACTURA" ADD CONSTRAINT "ID_ESTADO_FK1" FOREIGN KEY ("ID_ESTADO")
	  REFERENCES "HOSTAL"."ESTADO" ("ID_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HAB_ACCESORIO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" ADD CONSTRAINT "ID_ACCESORIO_FK1" FOREIGN KEY ("ID_ACCESORIO")
	  REFERENCES "HOSTAL"."ACCESORIO" ("ID_ACCESORIO") ENABLE;
  ALTER TABLE "HOSTAL"."HAB_ACCESORIO" ADD CONSTRAINT "ID_HABITACION_FK2" FOREIGN KEY ("ID_HABITACION")
	  REFERENCES "HOSTAL"."HABITACION" ("ID_HABITACION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HABITACION
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."HABITACION" ADD CONSTRAINT "ID_ESTADO_HAB_FK1" FOREIGN KEY ("ID_ESTADO_HAB")
	  REFERENCES "HOSTAL"."ESTADO_HAB" ("ID_ESTADO_HAB") ENABLE;
  ALTER TABLE "HOSTAL"."HABITACION" ADD CONSTRAINT "ID_TIPO_CAMA_FK1" FOREIGN KEY ("ID_TIPO_CAMA")
	  REFERENCES "HOSTAL"."TIPO_CAMA" ("TIPO_CAMA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LOGIN
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."LOGIN" ADD CONSTRAINT "ID_PERFIL_FK1" FOREIGN KEY ("ID_PERFIL")
	  REFERENCES "HOSTAL"."PERFIL" ("ID_PERFIL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."MENU" ADD CONSTRAINT "ID_TIPO_MENU_FK1" FOREIGN KEY ("ID_TIPO_MENU")
	  REFERENCES "HOSTAL"."TIPO_MENU" ("ID_TIPO_MENU") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDEN_COMPRA
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" ADD CONSTRAINT "ID_EMPRESA_FK3" FOREIGN KEY ("ID_EMPRESA")
	  REFERENCES "HOSTAL"."EMPRESA" ("ID_EMPRESA") ENABLE;
  ALTER TABLE "HOSTAL"."ORDEN_COMPRA" ADD CONSTRAINT "ID_ESTADO_FK2" FOREIGN KEY ("ID_ESTADO")
	  REFERENCES "HOSTAL"."ESTADO" ("ID_ESTADO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDEN_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" ADD CONSTRAINT "ID_EMPLEADO_FK1" FOREIGN KEY ("ID_EMPLEADO")
	  REFERENCES "HOSTAL"."EMPLEADO" ("ID_EMPLEADO") ENABLE;
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" ADD CONSTRAINT "ID_ESTADO_FK3" FOREIGN KEY ("ID_ESTADO")
	  REFERENCES "HOSTAL"."ESTADO" ("ID_ESTADO") ENABLE;
  ALTER TABLE "HOSTAL"."ORDEN_PEDIDO" ADD CONSTRAINT "ID_PROVEEDOR_FK1" FOREIGN KEY ("ID_PROVEEDOR")
	  REFERENCES "HOSTAL"."PROVEEDOR" ("ID_PROVEEDOR") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PERIODO_MENU
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PERIODO_MENU" ADD CONSTRAINT "ID_MENU_FK2" FOREIGN KEY ("ID_MENU")
	  REFERENCES "HOSTAL"."MENU" ("ID_MENU") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCTO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PRODUCTO" ADD CONSTRAINT "ID_CATEGORIA_FK1" FOREIGN KEY ("ID_CATEGORIA")
	  REFERENCES "HOSTAL"."CATEGORIA" ("ID_CATEGORIA") ENABLE;
  ALTER TABLE "HOSTAL"."PRODUCTO" ADD CONSTRAINT "ID_DETALLE_PRODUCTO_FK1" FOREIGN KEY ("ID_DETALLE_PRODUCTO")
	  REFERENCES "HOSTAL"."DETALLE_PRODUCTO" ("ID_DETALLE_PRODUCTO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROVEEDOR
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."PROVEEDOR" ADD CONSTRAINT "ID_RUBRO_FK1" FOREIGN KEY ("ID_RUBRO")
	  REFERENCES "HOSTAL"."RUBRO" ("ID_RUBRO") ENABLE;
  ALTER TABLE "HOSTAL"."PROVEEDOR" ADD CONSTRAINT "ID_USUARIO_FK1" FOREIGN KEY ("ID_USUARIO")
	  REFERENCES "HOSTAL"."LOGIN" ("ID_USUARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RECEPCION_PEDIDO
--------------------------------------------------------

  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" ADD CONSTRAINT "ID_EMPLEADO_FK2" FOREIGN KEY ("ID_EMPLEADO")
	  REFERENCES "HOSTAL"."EMPLEADO" ("ID_EMPLEADO") ENABLE;
  ALTER TABLE "HOSTAL"."RECEPCION_PEDIDO" ADD CONSTRAINT "ID_ORDEN_PEDIDO_FK1" FOREIGN KEY ("ID_ORDEN_PEDIDO")
	  REFERENCES "HOSTAL"."ORDEN_PEDIDO" ("ID_ORDEN_PEDIDO") ENABLE;
--------------------------------------------------------
--  DDL for Trigger ACCESORIO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."ACCESORIO_TRG" 
BEFORE INSERT ON ACCESORIO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ACCESORIO IS NULL THEN
      SELECT ACCESORIO_SEQ.NEXTVAL INTO :NEW.ID_ACCESORIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."ACCESORIO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CATEGORIA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."CATEGORIA_TRG" 
BEFORE INSERT ON CATEGORIA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_CATEGORIA IS NULL THEN
      SELECT CATEGORIA_SEQ.NEXTVAL INTO :NEW.ID_CATEGORIA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."CATEGORIA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CLIENTE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."CLIENTE_TRG" 
BEFORE INSERT ON CLIENTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_CLIENTE IS NULL THEN
      SELECT CLIENTE_SEQ.NEXTVAL INTO :NEW.ID_CLIENTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."CLIENTE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_CLIENTE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_CLIENTE_TRG" 
BEFORE INSERT ON DETALLE_CLIENTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_CLIENTE IS NULL THEN
      SELECT DETALLE_CLIENTE_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_CLIENTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_CLIENTE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_FACTURA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_FACTURA_TRG" 
BEFORE INSERT ON DETALLE_FACTURA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_FACTURA IS NULL THEN
      SELECT DETALLE_FACTURA_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_FACTURA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_FACTURA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_MENU_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_MENU_TRG" 
BEFORE INSERT ON DETALLE_MENU 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_MENU IS NULL THEN
      SELECT DETALLE_MENU_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_MENU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_MENU_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_OC_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_OC_TRG" 
BEFORE INSERT ON DETALLE_OC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_OC IS NULL THEN
      SELECT DETALLE_OC_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_OC FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_OC_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_PEDIDO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_PEDIDO_TRG" 
BEFORE INSERT ON DETALLE_PEDIDO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_PEDIDO IS NULL THEN
      SELECT DETALLE_PEDIDO_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_PEDIDO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_PEDIDO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."DETALLE_PRODUCTO_TRG" 
BEFORE INSERT ON DETALLE_PRODUCTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DETALLE_PRODUCTO IS NULL THEN
      SELECT DETALLE_PRODUCTO_SEQ.NEXTVAL INTO :NEW.ID_DETALLE_PRODUCTO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."DETALLE_PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLEADO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."EMPLEADO_TRG" 
BEFORE INSERT ON EMPLEADO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_EMPLEADO IS NULL THEN
      SELECT EMPLEADO_SEQ.NEXTVAL INTO :NEW.ID_EMPLEADO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."EMPLEADO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPRESA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."EMPRESA_TRG" 
BEFORE INSERT ON EMPRESA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."EMPRESA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ESTADO_HAB_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."ESTADO_HAB_TRG" 
BEFORE INSERT ON ESTADO_HAB 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ESTADO_HAB IS NULL THEN
      SELECT ESTADO_HAB_SEQ.NEXTVAL INTO :NEW.ID_ESTADO_HAB FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."ESTADO_HAB_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ESTADO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."ESTADO_TRG" 
BEFORE INSERT ON ESTADO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ESTADO IS NULL THEN
      SELECT ESTADO_SEQ.NEXTVAL INTO :NEW.ID_ESTADO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."ESTADO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger FACTURA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."FACTURA_TRG" 
BEFORE INSERT ON FACTURA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_FACTURA IS NULL THEN
      SELECT FACTURA_SEQ.NEXTVAL INTO :NEW.ID_FACTURA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."FACTURA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HAB_ACCESORIO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."HAB_ACCESORIO_TRG" 
BEFORE INSERT ON HAB_ACCESORIO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_HAB_ACCESORIO IS NULL THEN
      SELECT HAB_ACCESORIO_SEQ.NEXTVAL INTO :NEW.ID_HAB_ACCESORIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."HAB_ACCESORIO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HABITACION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."HABITACION_TRG" 
BEFORE INSERT ON HABITACION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_HABITACION IS NULL THEN
      SELECT HABITACION_SEQ.NEXTVAL INTO :NEW.ID_HABITACION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."HABITACION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HOTEL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."HOTEL_TRG" 
BEFORE INSERT ON HOTEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."HOTEL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HOTEL_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."HOTEL_TRG1" 
BEFORE INSERT ON HOTEL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_HOTEL IS NULL THEN
      SELECT HOTEL_SEQ1.NEXTVAL INTO :NEW.ID_HOTEL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."HOTEL_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LOGIN_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."LOGIN_TRG" 
BEFORE INSERT ON LOGIN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."LOGIN_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MENU_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."MENU_TRG" 
BEFORE INSERT ON MENU 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_MENU IS NULL THEN
      SELECT MENU_SEQ.NEXTVAL INTO :NEW.ID_MENU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."MENU_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORDEN_COMPRA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."ORDEN_COMPRA_TRG" 
BEFORE INSERT ON ORDEN_COMPRA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_OC IS NULL THEN
      SELECT ORDEN_COMPRA_SEQ.NEXTVAL INTO :NEW.ID_OC FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."ORDEN_COMPRA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORDEN_PEDIDO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."ORDEN_PEDIDO_TRG" 
BEFORE INSERT ON ORDEN_PEDIDO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ORDEN_PEDIDO IS NULL THEN
      SELECT ORDEN_PEDIDO_SEQ.NEXTVAL INTO :NEW.ID_ORDEN_PEDIDO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."ORDEN_PEDIDO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERFIL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."PERFIL_TRG" 
BEFORE INSERT ON PERFIL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PERFIL IS NULL THEN
      SELECT PERFIL_SEQ.NEXTVAL INTO :NEW.ID_PERFIL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."PERFIL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERIODO_MENU_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."PERIODO_MENU_TRG" 
BEFORE INSERT ON PERIODO_MENU 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PERIODO_MENU IS NULL THEN
      SELECT PERIODO_MENU_SEQ.NEXTVAL INTO :NEW.ID_PERIODO_MENU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."PERIODO_MENU_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."PRODUCTO_TRG" 
BEFORE INSERT ON PRODUCTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PRODUCTO IS NULL THEN
      SELECT PRODUCTO_SEQ.NEXTVAL INTO :NEW.ID_PRODUCTO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PROVEEDOR_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."PROVEEDOR_TRG" 
BEFORE INSERT ON PROVEEDOR 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PROVEEDOR IS NULL THEN
      SELECT PROVEEDOR_SEQ.NEXTVAL INTO :NEW.ID_PROVEEDOR FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."PROVEEDOR_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RECEPCION_PEDIDO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."RECEPCION_PEDIDO_TRG" 
BEFORE INSERT ON RECEPCION_PEDIDO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_RECEPCION_PEDIDO IS NULL THEN
      SELECT RECEPCION_PEDIDO_SEQ.NEXTVAL INTO :NEW.ID_RECEPCION_PEDIDO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."RECEPCION_PEDIDO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RUBRO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."RUBRO_TRG" 
BEFORE INSERT ON RUBRO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."RUBRO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_CAMA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."TIPO_CAMA_TRG" 
BEFORE INSERT ON TIPO_CAMA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.TIPO_CAMA IS NULL THEN
      SELECT TIPO_CAMA_SEQ.NEXTVAL INTO :NEW.TIPO_CAMA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."TIPO_CAMA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_MENU_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "HOSTAL"."TIPO_MENU_TRG" 
BEFORE INSERT ON TIPO_MENU 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TIPO_MENU IS NULL THEN
      SELECT TIPO_MENU_SEQ.NEXTVAL INTO :NEW.ID_TIPO_MENU FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "HOSTAL"."TIPO_MENU_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Function FN_GET_GLOSA_ERROR
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "HOSTAL"."FN_GET_GLOSA_ERROR" RETURN VARCHAR2
AS

/***********************************************************************************************************************
   NAME:    FN_GET_GLOSA_ERROR
   PURPOSE: Funcion que retorna glosa de error, incluye stacktrace con nombre del SP y linea donde se produce el error

   REVISIONS:
   Ver          Date           Author                       Description
   ---------    ----------     -------------------          -------------------------------------------------------------
   X.X.X-X.X    DD/MM/YYYY     AUTOR DE LA FUNCION          1. Funcion que retorna detalles del error ocurrido

************************************************************************************************************************/

LV_BACKTRACE VARCHAR2(4000) := DBMS_UTILITY.format_error_backtrace;
LV_MENSAJE VARCHAR2(4000) := '';

BEGIN

    LV_MENSAJE := CONCAT(LV_BACKTRACE, SUBSTR(SQLERRM, 1, 255));

    RETURN SUBSTR(LV_MENSAJE, 1, 4000);

EXCEPTION
    WHEN OTHERS THEN
        RETURN NULL;
END FN_GET_GLOSA_ERROR;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_CLIENTE" (
  IN_CLIENTE IN NUMBER,
  IN_NOMBRE IN VARCHAR2,
  IN_APELLIDO IN VARCHAR2,
  IN_RUT IN VARCHAR2,
  IN_TELEFONO IN NUMBER,
  IN_EMPRESA IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_CLIENTE
   PURPOSE		ACTUALIZA DATOS CLIENTE

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE            1. ACTUALIZA DATOS CLIENTE

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_CLIENTE ejecutado exitosamente';

    UPDATE HOSTAL.CLIENTE SET
      NOMBRE = IN_NOMBRE,
	  APELLIDO = IN_APELLIDO,
      RUT = IN_RUT,
	  TELEFONO = IN_TELEFONO,
      ID_EMPRESA = IN_EMPRESA
      WHERE ID_CLIENTE = IN_CLIENTE;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_EMPLEADO" (
  IN_EMPLEADO IN NUMBER,
  IN_NOMBRE IN VARCHAR2,
  IN_APELLIDO IN VARCHAR2,
  IN_RUT IN VARCHAR2,
  IN_TELEFONO IN NUMBER,
  IN_MAIL IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_EMPLEADO
   PURPOSE		ACTUALIZA DATOS EMPLEADO

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA               1. ACTUALIZA DATOS EMPLEADO

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_EMPLEADO ejecutado exitosamente';

    UPDATE HOSTAL.EMPLEADO SET
      NOMBRE = IN_NOMBRE,
      APELLIDO = IN_APELLIDO,      
	  RUT = IN_RUT,
	  TELEFONO = IN_TELEFONO,
	  MAIL = IN_MAIL
      WHERE ID_EMPLEADO = IN_EMPLEADO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_EMPLEADO;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_EMPRESA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_EMPRESA" (
  IN_EMPRESA IN NUMBER,
  IN_NOMBRE IN VARCHAR2,
  IN_DIRECCION IN VARCHAR2,
  IN_TELEFONO IN NUMBER,
  IN_MAIL IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_EMPRESA
   PURPOSE		ACTUALIZA DATOS EMPRESA

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		17/05/2020     MARCELA VERGARA            1. ACTUALIZA DATOS EMPRESA
   
***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_EMPRESA ejecutado exitosamente';

    UPDATE HOSTAL.EMPRESA SET
    NOMBRE = IN_NOMBRE,
	  DIRECCION = IN_DIRECCION,
	  TELEFONO = IN_TELEFONO,
	  MAIL = IN_MAIL
      WHERE ID_EMPRESA = IN_EMPRESA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_EMPRESA;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_EMPRESA_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_EMPRESA_ALL" (
  IN_ID_USUARIO IN VARCHAR2,
  IN_NOMBRE IN VARCHAR2,
  IN_RUT IN VARCHAR2,
  IN_DIRECCION IN VARCHAR2,
  IN_TELEFONO IN NUMBER,
  IN_MAIL IN VARCHAR2,
  IN_USERNAME IN VARCHAR2,
  IN_PASSWORD IN VARCHAR2,
  IN_PERFIL IN NUMBER,
  IN_HOTEL IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_EMPRESA_ALL
   PURPOSE		ACTUALIZA TODOS LOS DATOS DE LA EMPRESA

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		26/05/2020     ALEJANDRO CONTRERAS        1. ACTUALIZA DATOS EMPRESA

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_EMPRESA_ALL ejecutado exitosamente';

    UPDATE HOSTAL.EMPRESA SET
    NOMBRE = IN_NOMBRE,
    RUT = IN_RUT,
    DIRECCION = IN_DIRECCION,
    TELEFONO = IN_TELEFONO,
    MAIL = IN_MAIL,
    ID_HOTEL = IN_HOTEL
    WHERE id_usuario = IN_ID_USUARIO;

    UPDATE HOSTAL.LOGIN L SET
    L.USERNAME = IN_USERNAME,
    L.PASSWORD = IN_PASSWORD,
    L.ID_PERFIL = IN_PERFIL
    WHERE l.id_usuario = IN_ID_USUARIO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_EMPRESA_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_HABITACION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_HABITACION" (
    IN_HABITACION IN NUMBER,
    IN_TIPO_CAMA IN NUMBER,
    IN_PRECIO IN NUMBER,
    IN_ESTADO IN NUMBER,
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_HABITACION
   PURPOSE		ACTUALIZA DATOS HABITACION

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA               1. ACTUALIZA DATOS HABITACION

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_HABITACION ejecutado exitosamente';

    UPDATE HOSTAL.HABITACION SET
      ID_TIPO_CAMA = IN_TIPO_CAMA,
      PRECIO = IN_PRECIO,      
	  ID_ESTADO_HAB = IN_ESTADO
      WHERE ID_HABITACION = IN_HABITACION;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_HABITACION;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_PRODUCTO" (
  IN_PRODUCTO IN NUMBER,
  IN_CATEGORIA IN NUMBER,
  IN_DETALLE_PRODUCTO IN NUMBER,
  IN_DESCRIPCION IN VARCHAR2,
  IN_PRECIO IN NUMBER,
  IN_STOCK IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_PRODUCTO
   PURPOSE		ACTUALIZA DATOS PRODUCTO

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE            1. ACTUALIZA DATOS PRODUCTO

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_PRODUCTO ejecutado exitosamente';

    UPDATE HOSTAL.PRODUCTO SET    
      ID_CATEGORIA = IN_CATEGORIA,
	  ID_DETALLE_PRODUCTO = IN_DETALLE_PRODUCTO,
      DESCRIPCION = IN_DESCRIPCION,
	  PRECIO = IN_PRECIO,
      STOCK = IN_STOCK
      WHERE ID_PRODUCTO = IN_PRODUCTO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_PRODUCTO;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_PROVEEDOR" (
  IN_PROVEEDOR IN NUMBER,
  IN_NOMBRE IN VARCHAR2,
  IN_APELLIDO IN VARCHAR2,
  IN_TELEFONO IN NUMBER,
  IN_MAIL IN VARCHAR2,
  IN_RUBRO IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_PROVEEDOR
   PURPOSE		ACTUALIZA DATOS PROVEEDOR

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		23/05/2020     MARCELA VERGARA            1. ACTUALIZA DATOS PROVEEDOR
   0.2    		23/05/2020     MARCELA VERGARA            1. AGREGO CAMPO MAIL
   
***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_PROVEEDOR ejecutado exitosamente';

    UPDATE HOSTAL.PROVEEDOR SET
      NOMBRE = IN_NOMBRE,
	  APELLIDO = IN_APELLIDO,
	  TELEFONO = IN_TELEFONO,
	  MAIL = IN_MAIL,
	  ID_RUBRO = IN_RUBRO
      WHERE ID_PROVEEDOR = IN_PROVEEDOR;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_PROVEEDOR;

/
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZA_TIPO_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ACTUALIZA_TIPO_MENU" (
  IN_TIPO_MENU IN NUMBER,
  IN_DESCRIPCION IN VARCHAR2,
  IN_PRECIO IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_ACTUALIZA_TIPO_MENU
   PURPOSE		ACTUALIZA DATOS TIPO MENU

   REVISIONS:
   Ver          Date           Author                     Description
   ---------    ----------     -------------------        ----------------------------------------------
   0.1    		25/05/2020     MARCELA VERGARA            1. ACTUALIZA DATOS TIPO MENU

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ACTUALIZA_TIPO_MENU ejecutado exitosamente';

    UPDATE HOSTAL.TIPO_MENU SET
      DESCRIPCION = IN_DESCRIPCION,
	  PRECIO = IN_PRECIO
      WHERE ID_TIPO_MENU = IN_TIPO_MENU;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ACTUALIZA_TIPO_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_CLIENTE" (
    IN_NOMBRE IN VARCHAR2,
    IN_APELLIDO IN VARCHAR2,
    IN_RUT IN VARCHAR2,
    IN_TELEFONO IN NUMBER,
    IN_EMPRESA IN NUMBER,  
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_CLIENTE
   PURPOSE:		CREA UN CLIENTE

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		23/05/2020     MAXIMAR MANRIQUE       	1. CREA UN REGISTRO EN LA TABLA CLIENTE 
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_CLIENTE ejecutado exitosamente';

	INSERT INTO HOSTAL.CLIENTE(
        ID_CLIENTE,
        NOMBRE,
        APELLIDO,
        RUT,
        TELEFONO,
        ID_EMPRESA
   )
    VALUES (
      HOSTAL.CLIENTE_SEQ.NEXTVAL,
      IN_NOMBRE,
      IN_APELLIDO,
      IN_RUT,
      IN_TELEFONO,
      IN_EMPRESA
    ) RETURNING ID_CLIENTE INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_DETALLE_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_DETALLE_CLIENTE" (
    IN_ID_CLIENTE IN NUMBER,
    IN_FECHA_SALIDA IN VARCHAR2,
    IN_HABITACION IN NUMBER,    
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_DETALLE_CLIENTE
   PURPOSE		CREA EL INGRESO DE UN CLIENTE

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		24/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA DETALLE CLIENTE
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_DETALLE_CLIENTE ejecutado exitosamente';
    
	
	INSERT INTO HOSTAL.DETALLE_CLIENTE(
        ID_DETALLE_CLIENTE,
        ID_CLIENTE,
        FECHA_INGRESO,
        FECHA_SALIDA,
        ID_HABITACION
   )
    VALUES (
      HOSTAL.DETALLE_CLIENTE_SEQ.NEXTVAL,
      IN_ID_CLIENTE,
      (SELECT TO_DATE(SysDate,'DD/MM/YY') FROM DUAL),
      TO_DATE(IN_FECHA_SALIDA,'DD/MM/YY'),
      IN_HABITACION
    ) RETURNING ID_DETALLE_CLIENTE INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_DETALLE_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_EMPLEADO" (
    IN_NOMBRE IN VARCHAR2,
    IN_APELLIDO IN VARCHAR2,
    IN_RUT IN VARCHAR2,
    IN_TELEFONO IN NUMBER,
    IN_MAIL IN VARCHAR2,
    IN_HOTEL IN NUMBER,
    IN_USERNAME IN VARCHAR2,
    IN_PASSWORD IN VARCHAR2,
    IN_PERFIL IN NUMBER,
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER,
	OUT_ID_USUARIO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_EMPLEADO
   PURPOSE		CREA UNA EMPLEADO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		23/05/2020     JOEL PADILLA       	1. CREA UN REGISTRO EN LA TABLA EMPLEADO


***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_EMPLEADO ejecutado exitosamente';


	INSERT INTO HOSTAL.LOGIN(
		ID_USUARIO,
		USERNAME,
		PASSWORD,
		ID_PERFIL,
		ACTIVO
	)
	 VALUES (
		HOSTAL.LOGIN_SEQ.NEXTVAL,
		IN_USERNAME,
		IN_PASSWORD,
		IN_PERFIL,
		'Y'

	 ) RETURNING ID_USUARIO INTO OUT_ID_USUARIO;

	INSERT INTO HOSTAL.EMPLEADO(
        ID_EMPLEADO,
        NOMBRE,
        APELLIDO,
        RUT,
        TELEFONO,
        MAIL,
        ID_HOTEL,
        ID_USUARIO
   )
    VALUES (
      HOSTAL.EMPLEADO_SEQ.NEXTVAL,
      IN_NOMBRE,
      IN_APELLIDO,
      IN_RUT,
      IN_TELEFONO,
      IN_MAIL,
      IN_HOTEL,
      OUT_ID_USUARIO
    ) RETURNING ID_EMPLEADO INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_EMPLEADO;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_EMPRESA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_EMPRESA" (
    IN_NOMBRE IN VARCHAR2,
    IN_RUT IN VARCHAR2,
    IN_DIRECCION IN VARCHAR2,
    IN_TELEFONO IN NUMBER,
    IN_MAIL IN VARCHAR2,
    IN_USERNAME IN VARCHAR2,
    IN_PASSWORD IN VARCHAR2,
    IN_PERIL IN NUMBER,
    IN_HOTEL IN NUMBER,    
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER,
	OUT_ID_USUARIO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_EMPRESA
   PURPOSE		CREA UNA EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		17/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA EMPRESA
   0.2   		23/05/2020     MARCELA VERGARA       	1. ACTIVO AL USUARIO EN EL CAMPO ACTIVO DE LOGIN
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_EMPRESA ejecutado exitosamente';

    
	INSERT INTO HOSTAL.LOGIN(
		ID_USUARIO,
		USERNAME,
		PASSWORD,
		ID_PERFIL,
		ACTIVO
	)
	 VALUES (
		HOSTAL.LOGIN_SEQ.NEXTVAL,
		IN_USERNAME,
		IN_PASSWORD,
		IN_PERIL,
		'Y'
		
	 ) RETURNING ID_USUARIO INTO OUT_ID_USUARIO;
	
	INSERT INTO HOSTAL.EMPRESA(
        ID_EMPRESA,
        NOMBRE,
        RUT,
        DIRECCION,
        TELEFONO,
        MAIL,
        ID_USUARIO,
        ID_HOTEL
   )
    VALUES (
      HOSTAL.EMPRESA_SEQ.NEXTVAL,
      IN_NOMBRE,
      IN_RUT,
      IN_DIRECCION,
      IN_TELEFONO,
      IN_MAIL,
      OUT_ID_USUARIO,
      IN_HOTEL
    ) RETURNING ID_EMPRESA INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_EMPRESA;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_HABITACION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_HABITACION" (
    IN_TIPO_CAMA IN NUMBER,
    IN_PRECIO IN NUMBER,
    IN_ESTADO IN NUMBER,
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_HABITACION
   PURPOSE		CREA UNA HABITACION

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		23/05/2020     JOEL PADILLA       	1. CREA UN REGISTRO EN LA TABLA HABITACION


***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_HABITACION ejecutado exitosamente';


	INSERT INTO HOSTAL.HABITACION(
        ID_HABITACION,
        ID_TIPO_CAMA,
        PRECIO,
        ID_ESTADO_HAB
   )
    VALUES (
      HOSTAL.HABITACION_SEQ.NEXTVAL,
      IN_TIPO_CAMA,
      IN_PRECIO,
      IN_ESTADO
    ) RETURNING ID_HABITACION INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_HABITACION;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_MENU" (
    IN_DESCRIPCION_MENU IN VARCHAR2,
    IN_TIPO_MENU IN NUMBER,
	IN_DESCRIPCION_PERIODO IN VARCHAR2,
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_MENU
   PURPOSE		CREA MENU

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		25/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA MENU
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_MENU ejecutado exitosamente';
    
	
	INSERT INTO HOSTAL.MENU(
        ID_MENU,
        DESCRIPCION,
        ID_TIPO_MENU
   )
    VALUES (
      HOSTAL.MENU_SEQ.NEXTVAL,
	  IN_DESCRIPCION_MENU,
	  IN_TIPO_MENU
      
    ) RETURNING ID_MENU INTO OUT_ID_SALIDA;
	
	INSERT INTO HOSTAL.PERIODO_MENU(
        ID_PERIODO_MENU,
        DESCRIPCION,
        ID_MENU
   )
    VALUES (
      HOSTAL.PERIODO_MENU_SEQ.NEXTVAL,
	  IN_DESCRIPCION_PERIODO,
	  OUT_ID_SALIDA
      
    ) RETURNING ID_PERIODO_MENU INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_PRODUCTO" (
    IN_CATEGORIA IN NUMBER,
    IN_DETALLE_PRODUCTO IN NUMBER,
    IN_DESCRIPCION IN VARCHAR2,
    IN_PRECIO IN NUMBER, 
    IN_STOCK IN NUMBER,
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_PRODUCTO
   PURPOSE:		CREAR UN PRODUCTO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		23/05/2020     MAXIMAR MANRIQUE       	1. CREA UN REGISTRO EN LA TABLA PRODUCTO
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_PRODUCTO ejecutado exitosamente';

	INSERT INTO HOSTAL.PRODUCTO(
        ID_PRODUCTO,
        ID_CATEGORIA,
        ID_DETALLE_PRODUCTO,
        DESCRIPCION,
        PRECIO,
        STOCK
   )
    VALUES (
        HOSTAL.PRODUCTO_SEQ.NEXTVAL,
        IN_CATEGORIA,
        IN_DETALLE_PRODUCTO,
        IN_DESCRIPCION,
        IN_PRECIO,
        IN_STOCK
    ) RETURNING ID_PRODUCTO INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_PRODUCTO;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_PROVEEDOR" (
    IN_NOMBRE IN VARCHAR2,
	IN_APELLIDO IN VARCHAR2,
    IN_RUT IN VARCHAR2,
    IN_TELEFONO IN NUMBER,
	IN_MAIL IN VARCHAR2,
    IN_USERNAME IN VARCHAR2,
    IN_PASSWORD IN VARCHAR2,
    IN_PERIL IN NUMBER,
    IN_RUBRO IN NUMBER, 
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER,
	OUT_ID_USUARIO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_PROVEEDOR
   PURPOSE		CREA UN PROVEEDOR

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		23/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA PROVEEDOR
   0.2   		23/05/2020     MARCELA VERGARA       	1. AGREGO CAMPO MAIL
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_PROVEEDOR ejecutado exitosamente';

    
	INSERT INTO HOSTAL.LOGIN(
		ID_USUARIO,
		USERNAME,
		PASSWORD,
		ID_PERFIL,
		ACTIVO
	)
	 VALUES (
		HOSTAL.LOGIN_SEQ.NEXTVAL,
		IN_USERNAME,
		IN_PASSWORD,
		IN_PERIL,
		'Y'
		
	 ) RETURNING ID_USUARIO INTO OUT_ID_USUARIO;
	
	INSERT INTO HOSTAL.PROVEEDOR(
        ID_PROVEEDOR,
        NOMBRE,
		APELLIDO,
        RUT,
        TELEFONO,
		MAIL,
		ID_RUBRO,
        ID_USUARIO
   )
    VALUES (
      HOSTAL.PROVEEDOR_SEQ.NEXTVAL,
      IN_NOMBRE,
	  IN_APELLIDO,
      IN_RUT,
      IN_TELEFONO,
	  IN_MAIL,
      IN_RUBRO,
      OUT_ID_USUARIO
    ) RETURNING ID_PROVEEDOR INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_PROVEEDOR;

/
--------------------------------------------------------
--  DDL for Procedure SP_CREA_TIPO_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_CREA_TIPO_MENU" (
    IN_DESCRIPCION IN VARCHAR2,
    IN_PRECIO IN NUMBER,    
    OUT_GLOSA OUT VARCHAR2,
    OUT_ESTADO OUT NUMBER,
    OUT_ID_SALIDA OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_CREA_TIPO_MENU
   PURPOSE		CREA EL TIPO DE MENU

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      -------------------------------------------------------
   0.1   		24/05/2020     MARCELA VERGARA       	1. CREA UN REGISTRO EN LA TABLA TIPO MENU
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_CREA_TIPO_MENU ejecutado exitosamente';
    
	
	INSERT INTO HOSTAL.TIPO_MENU(
        ID_TIPO_MENU,
        DESCRIPCION,
        PRECIO
   )
    VALUES (
      HOSTAL.TIPO_MENU_SEQ.NEXTVAL,
	  IN_DESCRIPCION,
	  IN_PRECIO
      
    ) RETURNING ID_TIPO_MENU INTO OUT_ID_SALIDA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_CREA_TIPO_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_CLIENTE" (
  IN_ID_CLIENTE IN NUMBER,
  IN_ACTIVO IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS
TEMPUSER INT;

/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_CLIENTE
   PURPOSE		DESACTIVA UNA CLIENTE

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE       	1. DESACTIVA CLIENTE

***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_CLIENTE ejecutado exitosamente';

/* SE HACE UN SELECT ANTES PARA OBTENER EL ID DE USUARIO A DESACTIVAR Y SE CREA VARIABLE TEMPUSER PARA ALMACENAR
CLIENTE -> EMPRESA -> LOGIN
*/
    SELECT
        E.ID_USUARIO AS USUARIO
    INTO TEMPUSER
    FROM HOSTAL.CLIENTE C
    JOIN EMPRESA E ON (C.ID_EMPRESA = E.ID_EMPRESA)
    WHERE C.ID_CLIENTE = IN_ID_CLIENTE;

    UPDATE HOSTAL.LOGIN SET
        ACTIVO = IN_ACTIVO
        WHERE ID_USUARIO = TEMPUSER;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_EMPLEADO" (
  IN_ID_USUARIO_EMPLEADO IN NUMBER,
  IN_ACTIVO IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS


/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_EMPLEADO
   PURPOSE		DESACTIVA UNA EMPLEADO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA      	   1. DESACTIVA EMPLEADO

***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_EMPLEADO ejecutado exitosamente';

  UPDATE HOSTAL.LOGIN SET
	ACTIVO = IN_ACTIVO
	WHERE ID_USUARIO = IN_ID_USUARIO_EMPLEADO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_EMPLEADO;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_EMPRESA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_EMPRESA" (
  IN_ID_USUARIO_EMPRESA IN NUMBER,
  IN_ACTIVO IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS


/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_EMPRESA
   PURPOSE		DESACTIVA UNA EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		17/05/2020     MARCELA VERGARA       	1. DESACTIVA EMPRESA
   0.2    		17/05/2020     MARCELA VERGARA       	1. DESACTIVA EMPRESA DESDE TABLA LOGIN
   
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_EMPRESA ejecutado exitosamente';

  UPDATE HOSTAL.LOGIN SET
	ACTIVO = IN_ACTIVO
	WHERE ID_USUARIO = IN_ID_USUARIO_EMPRESA;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_EMPRESA;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_HABITACION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_HABITACION" (
  IN_HABITACION IN NUMBER,
  IN_ESTADO IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS


/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_HABITACION
   PURPOSE		DESACTIVA UNA HABITACION

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA      	   1. DESACTIVA HABITACION

***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_HABITACION ejecutado exitosamente';

  UPDATE HOSTAL.HABITACION SET
	ID_ESTADO_HAB = IN_ESTADO
	WHERE ID_HABITACION = IN_HABITACION;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_HABITACION;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_PRODUCTO" (
  IN_ID_PRODUCTO IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS

/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_PRODUCTO
   PURPOSE		DESACTIVA UN PRODUCTO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE       	1. DESACTIVA PRODUCTO

***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_PRODUCTO ejecutado exitosamente';

    UPDATE HOSTAL.PRODUCTO SET
        STOCK = 0
        WHERE ID_PRODUCTO = IN_ID_PRODUCTO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_PRODUCTO;

/
--------------------------------------------------------
--  DDL for Procedure SP_DESACTIVA_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_DESACTIVA_PROVEEDOR" (
  IN_ID_USUARIO_PROVEEDOR IN NUMBER,
  IN_ACTIVO IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS


/**************************************************************************************************************
   NAME:       	SP_DESACTIVA_PROVEEDOR
   PURPOSE		DESACTIVA UN PROVEEDOR

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MARCELA VERGARA       	1. DESACTIVA PROVEEDOR
    
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_DESACTIVA_PROVEEDOR ejecutado exitosamente';

  UPDATE HOSTAL.LOGIN SET
	ACTIVO = IN_ACTIVO
	WHERE ID_USUARIO = IN_ID_USUARIO_PROVEEDOR;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_DESACTIVA_PROVEEDOR;

/
--------------------------------------------------------
--  DDL for Procedure SP_ELIMINA_TIPO_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_ELIMINA_TIPO_MENU" (
  IN_TIPO_MENU IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER
) AS


/**************************************************************************************************************
   NAME:       	SP_ELIMINA_TIPO_MENU
   PURPOSE		ELIMINA DATO DE TABLA TIPO_MENU

   REVISIONS:
   Ver          Date           Author                  Description
   ---------    ----------     -------------------     ----------------------------------------------
   0.1          25/05/2020     MARCELA VERGARA         1. ELIMINA REGISTRO TIPO_MENU

***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_ELIMINA_TIPO_MENU ejecutado exitosamente';

    DELETE FROM HOSTAL.TIPO_MENU WHERE ID_TIPO_MENU = IN_TIPO_MENU;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_ELIMINA_TIPO_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_CLIENTE" (
  IN_CLIENTE IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_CLIENTE
   PURPOSE		LEE DATOS CLIENTE

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE         1. LEER INFO CLIENTE
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_CLIENTE ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            C.NOMBRE,
            C.APELLIDO,
            C.RUT,
            C.TELEFONO,
            E.NOMBRE AS EMPRESA
        FROM HOSTAL.CLIENTE C
		JOIN EMPRESA E ON (C.ID_EMPRESA = E.ID_EMPRESA)
		WHERE C.ID_CLIENTE = IN_CLIENTE;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_CLIENTE;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_CLIENTE_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_CLIENTE_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_CLIENTE
   PURPOSE		LEE DATOS CLIENTE

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE         1. LEER INFO CLIENTE TODOS

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_CLIENTE_ALL ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            C.NOMBRE,
            C.APELLIDO,
            C.RUT,
            C.TELEFONO,
            E.NOMBRE AS EMPRESA
        FROM HOSTAL.CLIENTE C
		JOIN EMPRESA E ON (C.ID_EMPRESA = E.ID_EMPRESA);

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_CLIENTE_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPLEADO" (
  IN_EMPLEADO IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPLEADO
   PURPOSE		LEE DATOS EMPLEADO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA             1. LEER INFO EMPLEADO

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPLEADO ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            E.NOMBRE,
            E.APELLIDO,
            E.RUT,
            E.TELEFONO,
            E.MAIL,
			U.USERNAME AS USUARIO,
			H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPLEADO E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL)
		WHERE ID_EMPLEADO = IN_EMPLEADO;


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPLEADO;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPLEADO_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPLEADO_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPLEADO_ALL
   PURPOSE		LEE DATOS EMPLEADO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA             1. LEER INFO DE TODOS LAS EMPLEADO

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPLEADO_ALL ejecutado exitosamente';


   OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            E.NOMBRE,
            E.APELLIDO,
            E.RUT,
            E.TELEFONO,
            E.MAIL,
			U.USERNAME AS USUARIO,
			H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPLEADO E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL);


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPLEADO_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPRESA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPRESA" (
  IN_EMPRESA IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPRESA
   PURPOSE		LEE DATOS EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		17/05/2020     MARCELA VERGARA          1. LEER INFO EMPRESA
   0.2    		17/05/2020     MARCELA VERGARA          2. LEER CAMPO ACTIVO
   0.3    		17/05/2020     MARCELA VERGARA          2. LEER CAMPO ACTIVO DESDE TABLA LOGIN
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPRESA ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            E.NOMBRE,
            E.RUT,
            E.DIRECCION,
            E.TELEFONO,
            E.MAIL,
			U.ACTIVO,
            U.USERNAME,
			H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPRESA E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL)
		WHERE ID_EMPRESA = IN_EMPRESA;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPRESA;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPRESA_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPRESA_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPRESA_ALL
   PURPOSE		LEE DATOS EMPRESA

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MARCELA VERGARA          1. LEER INFO DE TODAS LAS EMPRESAS
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPRESA_ALL ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            E.NOMBRE,
            E.RUT,
            E.DIRECCION,
            E.TELEFONO,
            E.MAIL,
			U.ACTIVO,
            U.USERNAME,
			H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPRESA E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL);
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPRESA_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPRESA_RUT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPRESA_RUT" (
  IN_EMPRESA_RUT IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPRESA_RUT
   PURPOSE		LEE DATOS EMPRESA POR RUT

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		26/05/2020     MARCELA VERGARA          1. LEER INFO EMPRESA POR RUT
   0.2    		26/05/2020     MARCELA VERGARA          1. ELIMINO CAMPO ACTIVO AGREGO PERFIL Y PASS

***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPRESA_RUT ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
         SELECT
            E.NOMBRE,
            E.RUT,
            E.DIRECCION,
            E.TELEFONO,
            E.MAIL,
            U.USERNAME,
            U.PASSWORD,
            P.NOMBRE AS PERFIL,
            H.NOMBRE AS HOTEL
        FROM HOSTAL.EMPRESA E
		JOIN LOGIN U ON (E.ID_USUARIO = U.ID_USUARIO)
    JOIN PERFIL P ON P.ID_PERFIL = U.ID_PERFIL
		JOIN HOTEL H ON (E.ID_HOTEL = H.ID_HOTEL)
		WHERE E.RUT = IN_EMPRESA_RUT;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPRESA_RUT;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_EMPRESA_RUT_USER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_EMPRESA_RUT_USER" (
  IN_EMPRESA_RUT IN VARCHAR2,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_EMPRESA_RUT
   PURPOSE		LEE DATOS EMPRESA POR RUT

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		27/05/2020     ALEJANDRO CONTRERAS      1. LEER INFO EMPRESA POR RUT Y DEVOLVER ID_USER

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_EMPRESA_RUT_USER ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
         SELECT
            id_usuario
        FROM HOSTAL.EMPRESA
		WHERE RUT = IN_EMPRESA_RUT;


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_EMPRESA_RUT_USER;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_HABITACION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_HABITACION" (
  IN_HABITACION IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_HABITACION
   PURPOSE		LEE DATOS HABITACION

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA             1. LEER INFO HABITACION

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_HABITACION ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            H.ID_HABITACION,
            C.DESCRIPCION,
            H.PRECIO,
            E.DESCRIPCION
        FROM HOSTAL.HABITACION H
		JOIN TIPO_CAMA C ON (H.ID_TIPO_CAMA = C.TIPO_CAMA)
		JOIN ESTADO_HAB E ON (H.ID_ESTADO_HAB = E.ID_ESTADO_HAB)
		WHERE ID_HABITACION = IN_HABITACION;


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_HABITACION;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_HABITACION_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_HABITACION_ALL" (
  IN_HABITACION IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_HABITACION_ALL
   PURPOSE		LEE DATOS HABITACION_ALL

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     JOEL PADILLA             1. LEER INFO DE TODAS LAS HABITACIONES

***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_HABITACION_ALL ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            H.ID_HABITACION,
            C.DESCRIPCION,
            H.PRECIO,
            E.DESCRIPCION
        FROM HOSTAL.HABITACION H
		JOIN TIPO_CAMA C ON (H.ID_TIPO_CAMA = C.TIPO_CAMA)
		JOIN ESTADO_HAB E ON (H.ID_ESTADO_HAB = E.ID_ESTADO_HAB);


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_HABITACION_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_MENU" (
  IN_MENU IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_CUR_LEE_MENU OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_MENU
   PURPOSE		LEE DATOS MENU

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		25/05/2020     MARCELA VERGARA          1. LEER INFO TABLA MENU
  
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_MENU ejecutado exitosamente';


    OPEN OUT_CUR_LEE_MENU FOR
    SELECT M.DESCRIPCION, TM.PRECIO, TM.DESCRIPCION AS TIPO, PM.DESCRIPCION AS DIA 
		FROM MENU M
    JOIN PERIODO_MENU PM ON  M.ID_MENU = PM.ID_MENU
		JOIN TIPO_MENU TM ON TM.ID_TIPO_MENU = M.ID_TIPO_MENU	
		WHERE M.ID_MENU = IN_MENU;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_PERFIL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_PERFIL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_CUR_LEE_PERFIL OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_PERFIL
   PURPOSE		LEE PERFIL

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		26/05/2020     MARCELA VERGARA          1. LEER PERFIL
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_PERFIL ejecutado exitosamente';


    OPEN OUT_CUR_LEE_PERFIL FOR
        SELECT
        NOMBRE
        FROM HOSTAL.PERFIL;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_PERFIL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_PRODUCTO" (
  IN_PRODUCTO IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS

/**************************************************************************************************************
   NAME:       	SP_LEE_PRODUCTO
   PURPOSE		LEE DATOS PRODUCTO

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE         1. LEER INFO PRODUCTO
***************************************************************************************************************/


BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_PRODUCTO ejecutado exitosamente';

    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            P.ID_CATEGORIA AS CATEGORIA,
            P.ID_DETALLE_PRODUCTO AS DETALLE,
            P.DESCRIPCION,
            P.PRECIO,
            P.STOCK
        FROM HOSTAL.PRODUCTO P
		JOIN CATEGORIA C ON (C.ID_CATEGORIA = P.ID_CATEGORIA)
        JOIN DETALLE_PRODUCTO D ON (D.ID_DETALLE_PRODUCTO = P.ID_DETALLE_PRODUCTO)
		WHERE P.ID_PRODUCTO = IN_PRODUCTO;


    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_PRODUCTO;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_PRODUCTO_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_PRODUCTO_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS

/**************************************************************************************************************
   NAME:       	SP_LEE_PRODUCTO_ALL
   PURPOSE		LEE TODOS PRODUCTOS

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MAXIMAR MANRIQUE         1. LEER INFO TODOS PRODUCTO
***************************************************************************************************************/

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_PRODUCTO ejecutado exitosamente';

    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT
            P.ID_CATEGORIA AS CATEGORIA,
            P.ID_DETALLE_PRODUCTO AS DETALLE,
            P.DESCRIPCION,
            P.PRECIO,
            P.STOCK
        FROM HOSTAL.PRODUCTO P
		JOIN CATEGORIA C ON (C.ID_CATEGORIA = P.ID_CATEGORIA)
        JOIN DETALLE_PRODUCTO D ON (D.ID_DETALLE_PRODUCTO = P.ID_DETALLE_PRODUCTO);

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_PRODUCTO_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_PROVEEDOR" (
  IN_PROVEEDOR IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_PROVEEDOR
   PURPOSE		LEE DATOS PROVEEDOR

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MARCELA VERGARA          1. LEER INFO PROVEEDOR
   0.2    		23/05/2020     MARCELA VERGARA          1. AGREGO LEER INFO MAIL
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_PROVEEDOR ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT P.NOMBRE,P.APELLIDO,P.RUT,P.TELEFONO,P.MAIL,R.DESCRIPCION AS RUBRO,L.ACTIVO 
		FROM PROVEEDOR P
		JOIN RUBRO R ON R.ID_RUBRO = P.ID_RUBRO
		JOIN LOGIN L ON L.ID_USUARIO = P.ID_USUARIO
		WHERE P.ID_PROVEEDOR = IN_PROVEEDOR;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_PROVEEDOR;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_PROVEEDOR_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_PROVEEDOR_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_NOMBRE_CURSOR OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_PROVEEDOR_ALL
   PURPOSE		LEE DATOS PROVEEDOR

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		23/05/2020     MARCELA VERGARA          1. LEER INFO DE TODOS LOS PROVEEDORES
   
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_PROVEEDOR_ALL ejecutado exitosamente';


    OPEN OUT_NOMBRE_CURSOR FOR
        SELECT P.NOMBRE,P.APELLIDO,P.RUT,P.TELEFONO,P.MAIL,R.DESCRIPCION AS RUBRO,L.ACTIVO 
		FROM PROVEEDOR P
		JOIN RUBRO R ON R.ID_RUBRO = P.ID_RUBRO
		JOIN LOGIN L ON L.ID_USUARIO = P.ID_USUARIO;

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_PROVEEDOR_ALL;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_TIPO_MENU
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_TIPO_MENU" (
  IN_TIPO_MENU IN NUMBER,
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_CUR_LEE_TIPOMENU OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_TIPO_MENU
   PURPOSE		LEE DATOS TIPO MENU

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		25/05/2020     MARCELA VERGARA          1. LEER INFO TABLA TIPO MENU
   0.2    		25/05/2020     MARCELA VERGARA          1. CAMBIAR NOMBRE DE CURSOR
  
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_TIPO_MENU ejecutado exitosamente';


    OPEN OUT_CUR_LEE_TIPOMENU FOR
        SELECT
            DESCRIPCION,
			PRECIO
        FROM HOSTAL.TIPO_MENU 
		WHERE ID_TIPO_MENU = IN_TIPO_MENU;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_TIPO_MENU;

/
--------------------------------------------------------
--  DDL for Procedure SP_LEE_TIPO_MENU_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HOSTAL"."SP_LEE_TIPO_MENU_ALL" (
  OUT_GLOSA OUT VARCHAR2,
  OUT_ESTADO OUT NUMBER,
  OUT_CUR_LEE_TIPOMENU_ALL OUT SYS_REFCURSOR  
) AS
/**************************************************************************************************************
   NAME:       	SP_LEE_TIPO_MENU_ALL
   PURPOSE		LEE TODOS LOS DATOS TIPO MENU

   REVISIONS:
   Ver          Date           Author                   Description
   ---------    ----------     -------------------      ----------------------------------------------
   0.1    		25/05/2020     MARCELA VERGARA          1. LEER TODA LA INFO DE TABLA TIPO MENU
   0.2    		25/05/2020     MARCELA VERGARA          1. CAMBIAR NOMBRE DE CURSOR
  
***************************************************************************************************************/
    

BEGIN
    OUT_ESTADO := 0;
    OUT_GLOSA := 'SP_LEE_TIPO_MENU_ALL ejecutado exitosamente';


    OPEN OUT_CUR_LEE_TIPOMENU_ALL FOR
        SELECT
            DESCRIPCION,
			PRECIO
        FROM HOSTAL.TIPO_MENU;
  

    EXCEPTION
        WHEN OTHERS THEN
            OUT_ESTADO := -1;
            OUT_GLOSA := HOSTAL.FN_GET_GLOSA_ERROR;

END SP_LEE_TIPO_MENU_ALL;

/
